#!/usr/bin/env python3

import re
import subprocess
import unittest


### Tests.

class Test_Transform(unittest.TestCase):
    def test_basic(self):
        pairs = (
            ('http://pastebin.com/Yas84GQN', 'http://pastebin.com/raw/Yas84GQN'),
            ('http://hastebin.com/ufogotebaw.anything', 'http://hastebin.com/raw/ufogotebaw'),
            ('https://paste.debian.net/361351', 'https://paste.debian.net/plain/361351'),
            ('https://paste.debian.net/361351/', 'https://paste.debian.net/plain/361351/'),
            ('https://paste.debian.net/hidden/1d8a7b32', 'https://paste.debian.net/plainh/1d8a7b32'),
            ('https://paste.debian.net/hidden/1d8a7b32/', 'https://paste.debian.net/plainh/1d8a7b32/'),
            ('http://paste.grml.org/2643', 'http://paste.grml.org/plain/2643'),
            ('http://paste.grml.org/2643/', 'http://paste.grml.org/plain/2643/'),
            ('https://paste.grml.org/hidden/1d8a7b32', 'https://paste.grml.org/plainh/1d8a7b32'),
            ('https://paste.grml.org/hidden/1d8a7b32/', 'https://paste.grml.org/plainh/1d8a7b32/'),
            ('http://paste.opensuse.org/85382826', 'http://paste.opensuse.org/view/raw/85382826'),
            ('http://susepaste.org/77951426', 'http://susepaste.org/view/raw/77951426'),
            ('https://bpaste.net/show/b189be90c71f', 'https://bpaste.net/raw/b189be90c71f'),
            ('https://pastebin.mozilla.org/8857253', 'https://pastebin.mozilla.org/?dl=8857253'),
            ('http://pastebin.ca/3343653', 'http://pastebin.ca/raw/3343653'),
            ('http://pastie.org/10696241', 'http://pastie.org/pastes/10696241/download'),
            ('https://paste.fedoraproject.org/313330/98546145/', 'https://paste.fedoraproject.org/313330/98546145/raw/'),
            ('http://www.fpaste.org/316409/45410125/', 'http://www.fpaste.org/316409/45410125/raw/'),
            ('http://dpaste.com/0H3BEC4', 'http://dpaste.com/0H3BEC4.txt'),
            ('http://codepad.org/FeZNxX6D', 'http://codepad.org/FeZNxX6D/raw.txt'),
            ('https://thepb.in/p/GZhWromXzP7FV', 'https://thepb.in/raw/GZhWromXzP7FV'),
        )
        for x, y in pairs:
            f_x = transform(x)
            self.assertEqual(f_x, y)            # correctness: f(x) == y
            self.assertEqual(transform(f_x), y) # idempotency: f(f(x)) == y


### Library functionality.
REPLACEMENTS = (
    (r'(://pastebin.com)/([A-Za-z0-9_]{4,})', r'\1/raw/\2'),
    (r'(://hastebin.com)/([A-Za-z0-9_]+)\..*', r'\1/raw/\2'),
    (r'(://paste.debian.net)/(\d+)', r'\1/plain/\2'),
    (r'(://paste.debian.net)/hidden/([a-f0-9]+)', r'\1/plainh/\2'),
    (r'(://paste.grml.org)/(\d+)', r'\1/plain/\2'),
    (r'(://paste.grml.org)/hidden/([a-f0-9]+)', r'\1/plainh/\2'),
    (r'(://paste.opensuse.org)/(\d+)', r'\1/view/raw/\2'),
    (r'(://susepaste.org)/(\d+)', r'\1/view/raw/\2'),
    (r'(://bpaste.net)/show/([a-f0-9]+)', r'\1/raw/\2'),
    (r'(://pastebin.mozilla.org)/(\d+)', r'\1/?dl=\2'),
    (r'(://pastebin.ca)/(\d+)', r'\1/raw/\2'),
    (r'(://pastie.org)/(\d+)', r'\1/pastes/\2/download'),
    (r'(://paste.fedoraproject.org)/(\d+/\d+)/?$', r'\1/\2/raw/'),
    (r'(://www.fpaste.org)/(\d+/\d+)/?$', r'\1/\2/raw/'),
    (r'(://dpaste.com)/([0-9A-Z]{7,}/?)$', r'\1/\2.txt'),
    (r'(://codepad.org)/([A-Za-z0-9_]{6,})/?$', r'\1/\2/raw.txt'),
    (r'(://thepb.in)/p/([A-Za-z0-9]{10,})', r'\1/raw/\2'),
)
REPLACEMENTS = tuple(
    (re.compile(original), modified) for original, modified in REPLACEMENTS
)


def github_gist(url):
    import glob
    import tempfile
    with tempfile.TemporaryDirectory() as wcdir:
        subprocess.check_call(['git', 'clone', '--quiet', '--depth=1', '--', url, wcdir])
        files = glob.glob(wcdir+'/*')
        if len(files) == 1:
            subprocess.check_call(['cat', '--', files[0]])
        else:
            raise Exception("Gist {!r} contains more than one file; clone it manually".format(url))

def transform(url):
    "Transform URL by REPLACEMENTS."
    for pattern, instead in REPLACEMENTS: 
        url = pattern.sub(instead, url)
    return url


### cmdline driver.
def main():
    if len(sys.argv) != 2:
        raise Exception("Usage: {} URL".format(sys.argv[0]))

    url = sys.argv[1]
    if '://gist.github.com/' in url:
        github_gist(url)
        return
    else:
        try:
            subprocess.check_call(['curl', '-s', '-S', '-f', '--', transform(url)])
        except subprocess.CalledProcessError as cpe:
            if cpe.returncode != 22:
                # $? == 22 means 404 Not Found, in which case, curl will have printed an error.
                raise

if __name__ == '__main__':
    import sys
    if sys.argv[1:2] == ['--test']: # beware of IndexError
        sys.argv[1:2] = [] # let unittest.main() interpret any remaining arguments
        unittest.main()
    else:
        main()
